daemon off;

error_log /dev/stdout info;

events {
    worker_connections 1024;
}

# TLS termination for RTMP
stream {
    # The internal RTMP server 
    upstream backend {
        server 127.0.0.1:1936;
    }

    # Handles stripping the TLS
    server {
        listen ${RTMP_PORT} ssl;
        proxy_pass backend;
        ssl_certificate /opt/keys/fullchain.pem;
        ssl_certificate_key /opt/keys/privkey.pem;
    }
}

# RTMP servers
# One for ingest, second is for taking the encoded stream
rtmp {
    server {
        listen 127.0.0.1:1936;
        chunk_size 4000;

        application stream {
            live on;
            on_publish http://localhost:1338/auth;
            # This needs to be a different URL as it doesn't pass the key and
            # such to it.
            # Docs seems to imply it should, but i'm getting issues and would
            # rather not patch the module.
            notify_update_timeout 10s;
            on_update http://localhost:1338/active;


            # Encodes as a 720p stream
            exec ffmpeg -i rtmp://localhost:1936/stream/$name
                -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30
                -r 30 -s 1280x720 -preset superfast -profile:v baseline
                rtmp://127.0.0.1:1337/hls/$name_720p2628kbs;
        }

    }

    server {
        listen 127.0.0.1:1337;
        chunk_size 4000;

        application hls {
            live on;
            hls on;
            hls_fragment_naming system;
            hls_fragment 5;
            hls_playlist_length 10;
            hls_path /opt/data/hls;
            hls_nested on;

            hls_variant _720p2628kbs BANDWIDTH=2628000,RESOLUTION=1280x720;
        }
    }
}

http {
    resolver 127.0.0.11;
    resolver_timeout 1s;
    access_log /dev/stdout combined;

    root /www/static;
    sendfile off;
    tcp_nopush on;

    server {
        listen ${HTTPS_PORT} ssl;

        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;

        ssl_certificate /opt/keys/fullchain.pem;
        ssl_certificate_key /opt/keys/privkey.pem;
        
        auth_basic           "Auth Required";
        auth_basic_user_file /opt/htpasswd;


        location /hls {
            auth_basic off;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /opt/data;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /live {
            auth_basic off;
            alias /opt/data/hls;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /static {
            auth_basic off;
            alias /www/static;
        }

        location /stat.xsl {
            root /www/static;
        }

        location /crossdomain.xml {
            auth_basic off;
            default_type text/xml;
            expires 24h;
        }
    }

    server {
        listen localhost:1338;
        # Handles the initial stream authentication
        location /auth {
            content_by_lua_file ./lua/auth.lua;
        }

        # Deals with checking if the connection is still allowed.
        location /active {
            content_by_lua_file ./lua/active.lua;
        }
    }

    server {
        listen ${HTTP_PORT} default_server;
        server_name _;

        return 301 https://$host:${HTTPS_PORT}$request_uri;
    }
}
